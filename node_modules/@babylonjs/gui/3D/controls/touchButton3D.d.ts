import { Vector3 } from "@babylonjs/core/Maths/math.vector";
import { Mesh } from "@babylonjs/core/Meshes/mesh";
import { TransformNode } from "@babylonjs/core/Meshes/transformNode";
import { Scene } from "@babylonjs/core/scene";
import { Button3D } from "./button3D";
/**
 * Class used to create a touchable button in 3D
 */
export declare class TouchButton3D extends Button3D {
    private _collisionMesh;
    private _collidableFrontDirection;
    /**
     * Creates a new touchable button
     * @param name defines the control name
     * @param collisionMesh mesh to track collisions with
     */
    constructor(name?: string, collisionMesh?: Mesh);
    /**
     * Sets the front-facing direction of the button. Pass in Vector3.Zero to allow interactions from any direction
     * @param frontDir the forward direction of the button
     */
    set collidableFrontDirection(frontWorldDir: Vector3);
    /**
     * Returns the front-facing direction of the button, or Vector3.Zero if there is no 'front'
     */
    get collidableFrontDirection(): Vector3;
    /**
     * Sets the mesh used for testing input collision
     * @param collisionMesh the new collision mesh for the button
     */
    set collisionMesh(collisionMesh: Mesh);
    private _isInteractionInFrontOfButton;
    /** @hidden */
    _generatePointerEventType(providedType: number, nearMeshPosition: Vector3, activeInteractionCount: number): number;
    protected _getTypeName(): string;
    protected _createNode(scene: Scene): TransformNode;
    /**
     * Releases all associated resources
     */
    dispose(): void;
}
