import { AbstractMesh } from "@babylonjs/core/Meshes/abstractMesh";
import { Mesh } from "@babylonjs/core/Meshes/mesh";
import { Observable } from "@babylonjs/core/Misc/observable";
import { Scene } from "@babylonjs/core/scene";
import { TransformNode } from "@babylonjs/core/Meshes/transformNode";
import { Vector3 } from "@babylonjs/core/Maths/math.vector";
import { TouchButton3D } from "./touchButton3D";
/**
 * Class used as base class for touch-enabled toggleable buttons
 */
export declare class TouchToggleButton3D extends TouchButton3D {
    private _isPressed;
    /**
     * An event triggered when the button is toggled on
     */
    onToggleOnObservable: Observable<Vector3>;
    /**
     * An event triggered when the button is toggled off
     */
    onToggleOffObservable: Observable<Vector3>;
    /**
     * Creates a new button
     * @param name defines the control name
     * @param collisionMesh defines the mesh to track near interactions with
     */
    constructor(name?: string, collisionMesh?: Mesh);
    private _onToggle;
    protected _getTypeName(): string;
    protected _createNode(scene: Scene): TransformNode;
    protected _affectMaterial(mesh: AbstractMesh): void;
    /**
     * Releases all associated resources
     */
    dispose(): void;
}
