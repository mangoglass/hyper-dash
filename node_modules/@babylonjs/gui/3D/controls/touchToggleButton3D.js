import { __extends } from "tslib";
import { Observable } from "@babylonjs/core/Misc/observable";
import { TouchButton3D } from "./touchButton3D";
/**
 * Class used as base class for touch-enabled toggleable buttons
 */
var TouchToggleButton3D = /** @class */ (function (_super) {
    __extends(TouchToggleButton3D, _super);
    /**
     * Creates a new button
     * @param name defines the control name
     * @param collisionMesh defines the mesh to track near interactions with
     */
    function TouchToggleButton3D(name, collisionMesh) {
        var _this = _super.call(this, name, collisionMesh) || this;
        _this._isPressed = false;
        /**
         * An event triggered when the button is toggled on
         */
        _this.onToggleOnObservable = new Observable();
        /**
         * An event triggered when the button is toggled off
         */
        _this.onToggleOffObservable = new Observable();
        _this.onPointerUpObservable.add(function (posVecWithInfo) {
            _this._onToggle(posVecWithInfo);
        });
        return _this;
    }
    TouchToggleButton3D.prototype._onToggle = function (position) {
        this._isPressed = !this._isPressed;
        if (this._isPressed) {
            this.onToggleOnObservable.notifyObservers(position);
        }
        else {
            this.onToggleOffObservable.notifyObservers(position);
        }
    };
    TouchToggleButton3D.prototype._getTypeName = function () {
        return "TouchToggleButton3D";
    };
    // Mesh association
    TouchToggleButton3D.prototype._createNode = function (scene) {
        return _super.prototype._createNode.call(this, scene);
    };
    TouchToggleButton3D.prototype._affectMaterial = function (mesh) {
        _super.prototype._affectMaterial.call(this, mesh);
    };
    /**
     * Releases all associated resources
     */
    TouchToggleButton3D.prototype.dispose = function () {
        this.onToggleOnObservable.clear();
        this.onToggleOffObservable.clear();
        _super.prototype.dispose.call(this);
    };
    return TouchToggleButton3D;
}(TouchButton3D));
export { TouchToggleButton3D };
//# sourceMappingURL=touchToggleButton3D.js.map