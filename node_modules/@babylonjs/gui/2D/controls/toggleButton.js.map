{"version":3,"file":"toggleButton.js","sourceRoot":"","sources":["../../../../sourceES6/gui/src/2D/controls/toggleButton.ts"],"names":[],"mappings":"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","sourcesContent":["import { Nullable } from \"@babylonjs/core/types\";\nimport { Observable } from \"@babylonjs/core/Misc/observable\";\nimport { Vector2 } from \"@babylonjs/core/Maths/math.vector\";\n\nimport { Rectangle } from \"./rectangle\";\nimport { Control } from \"./control\";\nimport { TextBlock } from \"./textBlock\";\nimport { Image } from \"./image\";\nimport { _TypeStore } from \"@babylonjs/core/Misc/typeStore\";\nimport { PointerInfoBase } from \"@babylonjs/core/Events/pointerEvents\";\n\n/**\n * Class used to create toggle buttons\n */\nexport class ToggleButton extends Rectangle {\n    /**\n     * Function called to generate the toActive animation\n     */\n    public toActiveAnimation: () => void;\n\n    /**\n     * Function called to generate the toInactive animation\n     */\n    public toInactiveAnimation: () => void;\n\n    /**\n     * Function called to generate a pointer enter animation when the toggle button is active.\n     */\n    public pointerEnterActiveAnimation: () => void;\n    /**\n     * Function called to generate a pointer out animation when the toggle button is active.\n     */\n    public pointerOutActiveAnimation: () => void;\n    /**\n     * Function called to generate a pointer down animation when the toggle button is active.\n     */\n    public pointerDownActiveAnimation: () => void;\n    /**\n     * Function called to generate a pointer up animation when the toggle button is active.\n     */\n    public pointerUpActiveAnimation: () => void;\n\n    /**\n     * Function called to generate a pointer enter animation when the toggle button is inactive.\n     */\n    public pointerEnterInactiveAnimation: () => void;\n    /**\n     * Function called to generate a pointer out animation when the toggle button is inactive.\n     */\n    public pointerOutInactiveAnimation: () => void;\n    /**\n     * Function called to generate a pointer down animation when the toggle button is inactive.\n     */\n    public pointerDownInactiveAnimation: () => void;\n    /**\n     * Function called to generate a pointer up animation when the toggle button is inactive.\n     */\n    public pointerUpInactiveAnimation: () => void;\n\n    /** Observable raised when isActive is changed */\n    public onIsActiveChangedObservable = new Observable<boolean>();\n\n    /**\n     * Gets or sets a boolean indicating that the toggle button will let internal controls handle picking instead of doing it directly using its bounding info\n     */\n    public delegatePickingToChildren = false;\n\n    private _image: Nullable<Image>;\n    /**\n     * Returns the ToggleButton's image control if it exists\n     */\n    public get image(): Nullable<Image> {\n        return this._image;\n    }\n\n    private _textBlock: Nullable<TextBlock>;\n    /**\n     * Returns the ToggleButton's child TextBlock control if it exists\n     */\n    public get textBlock(): Nullable<TextBlock> {\n        return this._textBlock;\n    }\n\n    private _group: string;\n    /** Gets or sets group name this toggle button belongs to */\n    public get group(): string {\n        return this._group;\n    }\n    public set group(value: string) {\n        if (this._group === value) {\n            return;\n        }\n\n        this._group = value;\n    }\n\n    private _isActive = false;\n    /** Gets or sets a boolean indicating if the toogle button is active or not */\n    public get isActive(): boolean {\n        return this._isActive;\n    }\n    public set isActive(value: boolean) {\n        // Function modeled after radioButton.ts\n        if (this._isActive === value) {\n            return;\n        }\n\n        this._isActive = value;\n\n        // Update the visual state based on the new value\n        if (this._isActive) {\n            this.toActiveAnimation?.();\n        } else {\n            this.toInactiveAnimation?.();\n        }\n\n        this._markAsDirty();\n\n        this.onIsActiveChangedObservable.notifyObservers(value);\n\n        if (this._isActive && this._host && this._group) {\n            // A toggle button in a group can only have 1 active element at a given time.\n            // If this toggle button has a group, set other toggle buttons in the group to inactive.\n            this._host.executeOnAllControls((control) => {\n                // Check for control type ToggleButton\n                if (control.typeName === \"ToggleButton\") {\n                    // Don't do anything to this toggle button\n                    if (control === this) {\n                        return;\n                    }\n\n                    const childToggle = <ToggleButton>control;\n                    // If toggle button is in same group, set isActive to false\n                    if (childToggle.group === this.group) {\n                        childToggle.isActive = false;\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Creates a new ToggleButton\n     * @param name defines the control name\n     * @param group defines the toggle group this toggle belongs to\n     */\n    constructor(public name?: string, group?: string) {\n        super(name);\n        this.group = group ?? \"\";\n\n        this.thickness = 0;\n        this.isPointerBlocker = true;\n\n        let alphaStore: Nullable<number> = null;\n\n        this.toActiveAnimation = () => {\n            this.thickness = 1;\n        };\n        this.toInactiveAnimation = () => {\n            this.thickness = 0;\n        };\n\n        this.pointerEnterActiveAnimation = () => {\n            alphaStore = this.alpha;\n            this.alpha -= 0.1;\n        };\n\n        this.pointerOutActiveAnimation = () => {\n            if (alphaStore !== null) {\n                this.alpha = alphaStore;\n            }\n        };\n\n        this.pointerDownActiveAnimation = () => {\n            this.scaleX -= 0.05;\n            this.scaleY -= 0.05;\n        };\n\n        this.pointerUpActiveAnimation = () => {\n            this.scaleX += 0.05;\n            this.scaleY += 0.05;\n        };\n\n        this.pointerEnterInactiveAnimation = () => {\n            alphaStore = this.alpha;\n            this.alpha -= 0.1;\n        };\n\n        this.pointerOutInactiveAnimation = () => {\n            if (alphaStore !== null) {\n                this.alpha = alphaStore;\n            }\n        };\n\n        this.pointerDownInactiveAnimation = () => {\n            this.scaleX -= 0.05;\n            this.scaleY -= 0.05;\n        };\n\n        this.pointerUpInactiveAnimation = () => {\n            this.scaleX += 0.05;\n            this.scaleY += 0.05;\n        };\n    }\n\n    protected _getTypeName(): string {\n        return \"ToggleButton\";\n    }\n\n    // While being a container, the toggle button behaves like a control.\n    /** @hidden */\n    public _processPicking(x: number, y: number, pi: PointerInfoBase, type: number, pointerId: number, buttonIndex: number, deltaX?: number, deltaY?: number): boolean {\n        if (!this._isEnabled || !this.isHitTestVisible || !this.isVisible || this.notRenderable) {\n            return false;\n        }\n\n        if (!super.contains(x, y)) {\n            return false;\n        }\n\n        if (this.delegatePickingToChildren) {\n            let contains = false;\n            for (var index = this._children.length - 1; index >= 0; index--) {\n                var child = this._children[index];\n                if (child.isEnabled && child.isHitTestVisible && child.isVisible && !child.notRenderable && child.contains(x, y)) {\n                    contains = true;\n                    break;\n                }\n            }\n\n            if (!contains) {\n                return false;\n            }\n        }\n\n        this._processObservables(type, x, y, pi, pointerId, buttonIndex, deltaX, deltaY);\n\n        return true;\n    }\n\n    /** @hidden */\n    public _onPointerEnter(target: Control, pi: PointerInfoBase): boolean {\n        if (!super._onPointerEnter(target, pi)) {\n            return false;\n        }\n\n        if (this._isActive) {\n            if (this.pointerEnterActiveAnimation) {\n                this.pointerEnterActiveAnimation();\n            }\n        } else {\n            if (this.pointerEnterInactiveAnimation) {\n                this.pointerEnterInactiveAnimation();\n            }\n        }\n\n        return true;\n    }\n\n    /** @hidden */\n    public _onPointerOut(target: Control, pi: PointerInfoBase, force = false): void {\n        if (this._isActive) {\n            if (this.pointerOutActiveAnimation) {\n                this.pointerOutActiveAnimation();\n            }\n        } else {\n            if (this.pointerOutInactiveAnimation) {\n                this.pointerOutInactiveAnimation();\n            }\n        }\n\n        super._onPointerOut(target, pi, force);\n    }\n\n    /** @hidden */\n    public _onPointerDown(target: Control, coordinates: Vector2, pointerId: number, buttonIndex: number, pi: PointerInfoBase): boolean {\n        if (!super._onPointerDown(target, coordinates, pointerId, buttonIndex, pi)) {\n            return false;\n        }\n\n        if (this._isActive) {\n            if (this.pointerDownActiveAnimation) {\n                this.pointerDownActiveAnimation();\n            }\n        } else {\n            if (this.pointerDownInactiveAnimation) {\n                this.pointerDownInactiveAnimation();\n            }\n        }\n\n        return true;\n    }\n\n    /** @hidden */\n    public _onPointerUp(target: Control, coordinates: Vector2, pointerId: number, buttonIndex: number, notifyClick: boolean, pi: PointerInfoBase): void {\n        if (this._isActive) {\n            if (this.pointerUpActiveAnimation) {\n                this.pointerUpActiveAnimation();\n            }\n        } else {\n            if (this.pointerUpInactiveAnimation) {\n                this.pointerUpInactiveAnimation();\n            }\n        }\n\n        super._onPointerUp(target, coordinates, pointerId, buttonIndex, notifyClick, pi);\n    }\n}\n\n_TypeStore.RegisteredTypes[\"BABYLON.GUI.ToggleButton\"] = ToggleButton;\n"]}