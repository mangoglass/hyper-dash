{"version":3,"file":"focusableControl.js","sourceRoot":"","sources":["../../../../sourceES6/gui/src/2D/controls/focusableControl.ts"],"names":[],"mappings":"","sourcesContent":["import { IKeyboardEvent } from \"@babylonjs/core/Events/deviceInputEvents\";\nimport { Nullable } from \"@babylonjs/core/types\";\nimport { Control } from \"./control\";\n\n/**\n* Interface used to define a control that can receive focus\n*/\nexport interface IFocusableControl {\n    /**\n     * Function called when the control receives the focus\n     */\n    onFocus(): void;\n    /**\n     * Function called when the control loses the focus\n     */\n    onBlur(): void;\n    /**\n     * Function called to let the control handle keyboard events\n     * @param evt defines the current keyboard event\n     */\n    processKeyboard(evt: IKeyboardEvent): void;\n    /**\n    * Function called to get the list of controls that should not steal the focus from this control\n    * @returns an array of controls\n    */\n    keepsFocusWith(): Nullable<Control[]>;\n    /**\n    * Function to focus the control programmatically\n    */\n    focus(): void;\n    /**\n    * Function to unfocus the control programmatically\n    */\n    blur(): void;\n}"]}