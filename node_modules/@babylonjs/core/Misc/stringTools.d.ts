/**
 * Helper to manipulate strings
 */
export declare class StringTools {
    /**
     * Checks for a matching suffix at the end of a string (for ES5 and lower)
     * @param str Source string
     * @param suffix Suffix to search for in the source string
     * @returns Boolean indicating whether the suffix was found (true) or not (false)
     */
    static EndsWith(str: string, suffix: string): boolean;
    /**
     * Checks for a matching suffix at the beginning of a string (for ES5 and lower)
     * @param str Source string
     * @param suffix Suffix to search for in the source string
     * @returns Boolean indicating whether the suffix was found (true) or not (false)
     */
    static StartsWith(str: string, suffix: string): boolean;
    /**
     * Decodes a buffer into a string
     * @param buffer The buffer to decode
     * @returns The decoded string
     */
    static Decode(buffer: Uint8Array | Uint16Array): string;
    /**
     * Encode a buffer to a base64 string
     * @param buffer defines the buffer to encode
     * @returns the encoded string
     */
    static EncodeArrayBufferToBase64(buffer: ArrayBuffer | ArrayBufferView): string;
    /**
     * Converts a given base64 string as an ASCII encoded stream of data
     * @param base64Data The base64 encoded string to decode
     * @returns Decoded ASCII string
     */
    static DecodeBase64ToString(base64Data: string): string;
    /**
     * Converts a given base64 string into an ArrayBuffer of raw byte data
     * @param base64Data The base64 encoded string to decode
     * @returns ArrayBuffer of byte data
     */
    static DecodeBase64ToBinary(base64Data: string): ArrayBuffer;
    /**
    * Converts a number to string and pads with preceding zeroes until it is of specified length.
    * @param num the number to convert and pad
    * @param length the expected length of the string
    * @returns the padded string
    */
    static PadNumber(num: number, length: number): string;
}
