import { HardwareTextureWrapper } from '../../Materials/Textures/hardwareTextureWrapper';
import { Nullable } from '../../types';
declare type WebGPUBundleList = import("./webgpuBundleList").WebGPUBundleList;
/** @hidden */
export declare class WebGPUHardwareTexture implements HardwareTextureWrapper {
    /** @hidden */
    _bundleLists: WebGPUBundleList[];
    /** @hidden */
    _currentLayer: number;
    private _webgpuTexture;
    private _webgpuMSAATexture;
    get underlyingResource(): Nullable<GPUTexture>;
    get msaaTexture(): Nullable<GPUTexture>;
    set msaaTexture(texture: Nullable<GPUTexture>);
    view: Nullable<GPUTextureView>;
    format: GPUTextureFormat;
    textureUsages: number;
    textureAdditionalUsages: number;
    constructor(existingTexture?: Nullable<GPUTexture>);
    set(hardwareTexture: GPUTexture): void;
    setMSAATexture(hardwareTexture: GPUTexture): void;
    setUsage(textureSource: number, generateMipMaps: boolean, isCube: boolean, width: number, height: number): void;
    createView(descriptor?: GPUTextureViewDescriptor): void;
    reset(): void;
    release(): void;
}
export {};
