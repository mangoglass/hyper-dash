import { InternalTexture } from "../../Materials/Textures/internalTexture";
import { Nullable } from "../../types";
import { IMaterialContext } from "../IMaterialContext";
import { WebGPUCacheBindGroups } from "./webgpuCacheBindGroups";
/** @hidden */
interface IWebGPUMaterialContextSamplerCache {
    firstTextureName: string;
}
/** @hidden */
interface IWebGPUMaterialContextTextureCache {
    texture: InternalTexture;
    wrapU?: Nullable<number>;
    wrapV?: Nullable<number>;
    wrapR?: Nullable<number>;
    anisotropicFilteringLevel?: Nullable<number>;
    samplingMode?: Nullable<number>;
}
/** @hidden */
export declare class WebGPUMaterialContext implements IMaterialContext {
    private static _Counter;
    uniqueId: number;
    samplers: {
        [name: string]: Nullable<IWebGPUMaterialContextSamplerCache>;
    };
    textures: {
        [name: string]: Nullable<IWebGPUMaterialContextTextureCache>;
    };
    private _cacheBindGroups;
    constructor(cachBindGroups: WebGPUCacheBindGroups);
    setTexture(name: string, internalTexture: Nullable<InternalTexture>): boolean;
}
export {};
